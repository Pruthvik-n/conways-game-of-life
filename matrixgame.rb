# Any live cell with fewer than two live neighbours dies, as if caused by under-population.
# Any live cell with two or three live neighbours lives on to the next generation.
# Any live cell with more than three live neighbours dies, as if by overcrowding.
# Any dead cell with exactly three live neighbours becomes a live cell, as if by reproduction.
$count
require 'matrix'

class Matrix
  
  def []=(row, column, value)
    @rows[row][column] = value
  end

  def is_signed?(num) 
  	num.to_s.match(/\A[+]?\d+?\Z/) == nil ? false : true
  end			

  def printmatrix
    i = 0
    self.each do |number|
      print number.to_s + " "
      i += 1
      if i == self.column_size
        print "\n"
        i = 0
      end
    end
  end

	def game
		
		@old_a=self
		for i in 1..9999999999999999999999
		
		new_a = Matrix.build(17, 17) {|i| i = '-' }
		
		system("clear")
			min=0
			max=16
			0.upto(max) do |i|
				0.upto(max) do |j|
			
			$count=0

			#------NEIGHBOUR CONDITIONS REGULAR---------
					if is_signed?(i-1) && is_signed?(j-1) && @old_a[i-1,j-1]=='0' 
							
							$count+=1
					end
					if is_signed?(i-1)  && is_signed?(j) && @old_a[i-1,j]=='0'
							
							$count+=1
					end
					if is_signed?(i-1)  && is_signed?(j+1) && @old_a[i-1,j+1]=='0'
						
							$count+=1
					end
					if is_signed?(i)  && is_signed?(j-1) && @old_a[i,j-1]=='0'
							
							$count+=1
					end
					if is_signed?(i)  && is_signed?(j+1) && @old_a[i,j+1]=='0'
					
							$count+=1
					end
					if is_signed?(i+1)  && is_signed?(j-1) && @old_a[i+1,j-1]=='0'
							
							$count+=1
					end
					if is_signed?(i+1)  && is_signed?(j) && @old_a[i+1,j]=='0'
						
							$count+=1
					end
					if is_signed?(i+1)  && is_signed?(j+1)  && @old_a[i+1,j+1]=='0'
							
							$count+=1
					end
			# --------RULES-------------------------  	
					# puts $count
					if @old_a[i,j]=='-'
						if $count==3
							new_a[i,j]='0'
						end
					
					elsif @old_a[i,j]=='0'
						if
							$count<2 || $count>3
							new_a[i,j]='-'
						elsif 
							$count==2 || $count==3
							new_a[i,j]=@old_a[i,j]
						end
					end
				end
			end
			new_a.printmatrix
			sleep(0.1)
			@old_a = new_a
		end
	end
end	


a=Matrix[['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'],
	['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'],
	['-','0','-','-','-','-','-','-','-','-','-','0','-','-','-','-','-'],
	['-','0','0','-','-','-','-','-','-','-','-','0','0','-','-','-','-'],
	['-','-','0','0','-','-','-','0','-','-','-','-','-','-','0','0','-'],
	['-','-','0','0','-','-','-','0','0','-','-','-','-','-','-','0','-'],
	['-','-','0','0','-','-','-','0','0','0','-','-','-','-','-','-','-'],
	['0','0','-','-','-','-','-','-','0','-','-','-','-','-','-','-','-'],
	['0','-','-','-','-','-','-','0','-','-','-','-','-','-','-','0','-'],
	['-','-','-','0','-','-','-','0','-','-','-','-','-','-','-','-','-'],
	['-','-','0','0','-','-','-','-','-','-','-','-','0','0','-','-','-'],
	['-','-','-','-','-','0','0','-','-','-','-','-','0','0','0','-','-'],
	['-','0','0','-','-','0','0','-','0','-','-','-','0','-','-','0','-'],
	['0','0','0','-','-','0','0','0','-','-','-','0','0','0','-','0','0'],
	['-','-','0','0','-','-','-','0','0','-','-','-','-','-','-','0','0'],
	['-','-','0','0','-','-','-','0','0','-','-','-','-','0','-','-','-'],
	['-','-','-','-','-','0','0','-','-','-','-','-','-','0','-','-','-']]


b=Matrix[['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'],
		 ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'],
		 ['-','-','-','-','0','0','0','-','-','-','0','0','0','-','-','-','-'],
		 ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'],
		 ['-','-','0','-','-','-','-','0','-','0','-','-','-','-','0','-','-'],
		 ['-','-','0','-','-','-','-','0','-','0','-','-','-','-','0','-','-'],
		 ['-','-','0','-','-','-','-','0','-','0','-','-','-','-','0','-','-'],
		 ['-','-','-','-','0','0','0','-','-','-','0','0','0','-','-','-','-'],
		 ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'],
		 ['-','-','-','-','0','0','0','-','-','-','0','0','0','-','-','-','-'],
		 ['-','-','0','-','-','-','-','0','-','0','-','-','-','-','0','-','-'],
		 ['-','-','0','-','-','-','-','0','-','0','-','-','-','-','0','-','-'],
		 ['-','-','0','-','-','-','-','0','-','0','-','-','-','-','0','-','-'],
		 ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'],
		 ['-','-','-','-','0','0','0','-','-','-','0','0','0','-','-','-','-'],
		 ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'],
		 ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-']]

a.game